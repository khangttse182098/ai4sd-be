const rawCode =
  '```\nlanguage-learning-app/\n├── app/\n│   ├── globals.css\n│   ├── layout.tsx\n│   └── page.tsx\n├── components/\n│   ├── ui/\n│   │   ├── button.tsx\n│   │   └── card.tsx\n│   ├── features.tsx\n│   ├── footer.tsx\n│   ├── hero.tsx\n│   ├── pricing.tsx\n│   └── testimonials.tsx\n├── lib/\n│   └── utils.ts\n├── next.config.js\n├── package.json\n├── tailwind.config.js\n└── tsconfig.json\n```\n\n```json filename="package.json"\n{\n  "name": "language-learning-app",\n  "version": "0.1.0",\n  "private": true,\n  "scripts": {\n    "dev": "next dev --turbopack",\n    "build": "next build",\n    "start": "next start",\n    "lint": "next lint"\n  },\n  "dependencies": {\n    "react": "^18",\n    "react-dom": "^18",\n    "next": "15.1.0",\n    "lucide-react": "^0.263.1",\n    "clsx": "^2.0.0",\n    "tailwind-merge": "^2.0.0"\n  },\n  "devDependencies": {\n    "typescript": "^5",\n    "@types/node": "^20",\n    "@types/react": "^18",\n    "@types/react-dom": "^18",\n    "postcss": "^8",\n    "tailwindcss": "^3.4.1",\n    "eslint": "^8",\n    "eslint-config-next": "15.1.0"\n  }\n}\n```\n\n```js filename="next.config.js"\n/** @type {import(\'next\').NextConfig} */\nconst nextConfig = {\n  experimental: {\n    turbo: {\n      rules: {\n        \'*.svg\': {\n          loaders: [\'@svgr/webpack\'],\n          as: \'*.js\',\n        },\n      },\n    },\n  },\n}\n\nmodule.exports = nextConfig\n```\n\n```json filename="tsconfig.json"\n{\n  "compilerOptions": {\n    "lib": ["dom", "dom.iterable", "es6"],\n    "allowJs": true,\n    "skipLibCheck": true,\n    "strict": true,\n    "noEmit": true,\n    "esModuleInterop": true,\n    "module": "esnext",\n    "moduleResolution": "bundler",\n    "resolveJsonModule": true,\n    "isolatedModules": true,\n    "jsx": "preserve",\n    "incremental": true,\n    "plugins": [\n      {\n        "name": "next"\n      }\n    ],\n    "baseUrl": ".",\n    "paths": {\n      "@/*": ["./*"]\n    }\n  },\n  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],\n  "exclude": ["node_modules"]\n}\n```\n\n```js filename="tailwind.config.js"\n/** @type {import(\'tailwindcss\').Config} */\nmodule.exports = {\n  darkMode: ["class"],\n  content: [\n    \'./pages/**/*.{ts,tsx}\',\n    \'./components/**/*.{ts,tsx}\',\n    \'./app/**/*.{ts,tsx}\',\n    \'./src/**/*.{ts,tsx}\',\n  ],\n  prefix: "",\n  theme: {\n    container: {\n      center: true,\n      padding: "2rem",\n      screens: {\n        "2xl": "1400px",\n      },\n    },\n    extend: {\n      colors: {\n        border: "hsl(var(--border))",\n        input: "hsl(var(--input))",\n        ring: "hsl(var(--ring))",\n        background: "hsl(var(--background))",\n        foreground: "hsl(var(--foreground))",\n        primary: {\n          DEFAULT: "hsl(var(--primary))",\n          foreground: "hsl(var(--primary-foreground))",\n        },\n        secondary: {\n          DEFAULT: "hsl(var(--secondary))",\n          foreground: "hsl(var(--secondary-foreground))",\n        },\n        destructive: {\n          DEFAULT: "hsl(var(--destructive))",\n          foreground: "hsl(var(--destructive-foreground))",\n        },\n        muted: {\n          DEFAULT: "hsl(var(--muted))",\n          foreground: "hsl(var(--muted-foreground))",\n        },\n        accent: {\n          DEFAULT: "hsl(var(--accent))",\n          foreground: "hsl(var(--accent-foreground))",\n        },\n        popover: {\n          DEFAULT: "hsl(var(--popover))",\n          foreground: "hsl(var(--popover-foreground))",\n        },\n        card: {\n          DEFAULT: "hsl(var(--card))",\n          foreground: "hsl(var(--card-foreground))",\n        },\n      },\n      borderRadius: {\n        lg: "var(--radius)",\n        md: "calc(var(--radius) - 2px)",\n        sm: "calc(var(--radius) - 4px)",\n      },\n      keyframes: {\n        "accordion-down": {\n          from: { height: "0" },\n          to: { height: "var(--radix-accordion-content-height)" },\n        },\n        "accordion-up": {\n          from: { height: "var(--radix-accordion-content-height)" },\n          to: { height: "0" },\n        },\n      },\n      animation: {\n        "accordion-down": "accordion-down 0.2s ease-out",\n        "accordion-up": "accordion-up 0.2s ease-out",\n      },\n    },\n  },\n  plugins: [],\n}\n```\n\n```css filename="app/globals.css"\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n    --primary: 221.2 83.2% 53.3%;\n    --primary-foreground: 210 40% 98%;\n    --secondary: 210 40% 96%;\n    --secondary-foreground: 222.2 84% 4.9%;\n    --muted: 210 40% 96%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n    --accent: 210 40% 96%;\n    --accent-foreground: 222.2 84% 4.9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --ring: 221.2 83.2% 53.3%;\n    --radius: 0.5rem;\n  }\n\n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n    --primary: 217.2 91.2% 59.8%;\n    --primary-foreground: 222.2 84% 4.9%;\n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n    --accent: 217.2 32.6% 17.5%;\n    --accent-foreground: 210 40% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 224.3 76.3% 94.1%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n```\n\n```tsx filename="app/layout.tsx"\nimport type { Metadata } from \'next\'\nimport { Inter } from \'next/font/google\'\nimport \'./globals.css\'\n\nconst inter = Inter({ subsets: [\'latin\'] })\n\nexport const metadata: Metadata = {\n  title: \'LinguaFlow - Modern Language Learning\',\n  description: \'Master any language with AI-powered lessons, interactive conversations, and personalized learning paths.\',\n}\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <html lang="en">\n      <body className={inter.className}>{children}</body>\n    </html>\n  )\n}\n```\n\n```tsx filename="app/page.tsx"\nimport Hero from \'@/components/hero\'\nimport Features from \'@/components/features\'\nimport Testimonials from \'@/components/testimonials\'\nimport Pricing from \'@/components/pricing\'\nimport Footer from \'@/components/footer\'\n\nexport default function Home() {\n  return (\n    <main className="min-h-screen">\n      <Hero />\n      <Features />\n      <Testimonials />\n      <Pricing />\n      <Footer />\n    </main>\n  )\n}\n```\n\n```ts filename="lib/utils.ts"\nimport { type ClassValue, clsx } from "clsx"\nimport { twMerge } from "tailwind-merge"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n```\n\n```tsx filename="components/ui/button.tsx"\nimport * as React from "react"\nimport { cn } from "@/lib/utils"\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: "default" | "destructive" | "outline" | "secondary" | "ghost" | "link"\n  size?: "default" | "sm" | "lg" | "icon"\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant = "default", size = "default", ...props }, ref) => {\n    return (\n      <button\n        className={cn(\n          "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",\n          {\n            "bg-primary text-primary-foreground hover:bg-primary/90": variant === "default",\n            "bg-destructive text-destructive-foreground hover:bg-destructive/90": variant === "destructive",\n            "border border-input bg-background hover:bg-accent hover:text-accent-foreground": variant === "outline",\n            "bg-secondary text-secondary-foreground hover:bg-secondary/80": variant === "secondary",\n            "hover:bg-accent hover:text-accent-foreground": variant === "ghost",\n            "text-primary underline-offset-4 hover:underline": variant === "link",\n          },\n          {\n            "h-10 px-4 py-2": size === "default",\n            "h-9 rounded-md px-3": size === "sm",\n            "h-11 rounded-md px-8": size === "lg",\n            "h-10 w-10": size === "icon",\n          },\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = "Button"\n\nexport { Button }\n```\n\n```tsx filename="components/ui/card.tsx"\nimport * as React from "react"\nimport { cn } from "@/lib/utils"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      "rounded-lg border bg-card text-card-foreground shadow-sm",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = "Card"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn("flex flex-col space-y-1.5 p-6", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = "CardHeader"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      "text-2xl font-semibold leading-none tracking-tight",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = "CardTitle"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn("text-sm text-muted-foreground", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = "CardDescription"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />\n))\nCardContent.displayName = "CardContent"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn("flex items-center p-6 pt-0", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = "CardFooter"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n```\n\n```tsx filename="components/hero.tsx"\nimport { Button } from \'@/components/ui/button\'\nimport { Play, Star, Users, Globe } from \'lucide-react\'\n\nexport default function Hero() {\n  return (\n    <section className="relative overflow-hidden bg-gradient-to-br from-purple-50 via-white to-cyan-50 px-4 py-20 sm:px-6 lg:px-8">\n      <div className="mx-auto max-w-7xl">\n        <div className="grid gap-12 lg:grid-cols-2 lg:gap-8 items-center">\n          {/* Left Column - Content */}\n          <div className="flex flex-col justify-center space-y-8">';
